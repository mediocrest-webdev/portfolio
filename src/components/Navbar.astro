---
import Image from "astro/components/Image.astro";

const navLinks = [
  { href: "/", label: "Home" },
  { href: "#works", label: "Works" },
  { href: "#services", label: "Services" },
  { href: "#contact", label: "Contact" },
];
---

<header class="">
  <div class="relative p-6 lg:p-8 flex items-center justify-between">
    <a href="/">
      <Image
        src="/logo.svg"
        alt="logo"
        width="100"
        height="100"
        aria-hidden="true"
        aria-label="brand"
        class="object-cover"
        loading="eager"
      />
    </a>

    <div
      class="items-center hidden gap-2 md:flex ms-auto transition-colors duration-200"
    >
      {
        navLinks.map((link) => (
          <a
            href={link.href}
            class="transition-colors duration-300 hover:bg-gray-100 px-4 py-2 rounded-lg"
          >
            {link.label}
          </a>
        ))
      }
    </div>

    <div
      id="mobile-menu-button"
      class="md:hidden cursor-pointer bg-slate-200 bg-opacity-70 backdrop-blur-sm p-3 rounded-lg fixed top-4 right-6 z-[1000]"
      aria-expanded="false"
      aria-controls="mobile-menu"
      aria-label="mobile-menu-toggle"
      role="button"
      tabindex="0"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        height="24px"
        viewBox="0 -960 960 960"
        width="24px"
        fill="#000000"
        class="lg:hidden"
      >
        <path
          d="M120-240v-80h720v80H120Zm0-200v-80h720v80H120Zm0-200v-80h720v80H120Z"
        ></path>
      </svg>
    </div>
  </div>

  <div
    id="mobile-menu"
    class="hidden fixed top-0 right-0 w-full h-screen z-[999] bg-black text-slate-200 border-b lg:hidden overflow-hidden transition-transform duration-700 ease-[cubic-bezier(0.4,0,0.2,1)] transform translate-x-full shadow-md"
  >
    <div class="flex flex-col items-start justify-start h-full pt-20 px-8">
      <nav class="flex flex-col gap-4 w-full">
        {
          navLinks.map((link) => (
            <a href={link.href} class="text-3xl font-semibold">
              {link.label}
            </a>
          ))
        }
      </nav>

      <div class="mt-auto pb-8 w-full">
        <p class="text-xl font-medium mb-2">Let's work together</p>
        <a
          href="mailto:hello.lanceflores@gmail.com"
          class="text-lg text-muted hover:underline"
        >
          hello.lanceflores@gmail.com
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  const mobileMenuButton = document.getElementById("mobile-menu-button");
  const mobileMenu = document.getElementById("mobile-menu");
  const mobileLinks = mobileMenu.querySelectorAll("a");
  const body = document.body;

  let isMenuOpen = false;

  function openMenu() {
    mobileMenu.classList.remove("hidden");

    // Ensure reflow so the browser picks up the visibility change before transition
    void mobileMenu.offsetWidth;

    mobileMenu.classList.remove("translate-x-full"); // Slide it in

    body.style.overflow = "hidden"; // Prevent scrolling
    mobileMenuButton.style.zIndex = "1001";
  }

  function closeMenu() {
    mobileMenu.classList.add("translate-x-full"); // Slide it out to the right
    body.style.overflow = ""; // Re-enable scrolling
    mobileMenuButton.style.zIndex = "1000"; // Reset button z-index

    // Add 'hidden' after the transition completes
    mobileMenu.addEventListener(
      "transitionend",
      function handler() {
        mobileMenu.classList.add("hidden");
        mobileMenu.removeEventListener("transitionend", handler);
      },
      { once: true }
    );
  }

  mobileMenuButton.addEventListener("click", () => {
    isMenuOpen = !isMenuOpen;
    isMenuOpen ? openMenu() : closeMenu();

    mobileMenuButton.innerHTML = isMenuOpen
      ? `<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#000000" class="lg:hidden">
          <path d="m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z"/>
        </svg>`
      : `<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#000000" class="lg:hidden">
          <path d="M120-240v-80h720v80H120Zm0-200v-80h720v80H120Zm0-200v-80h720v80H120Z"/>
        </svg>`;
  });

  mobileLinks.forEach((link) => {
    link.addEventListener("click", () => {
      closeMenu();
      isMenuOpen = false;
      mobileMenuButton.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#000000" class="md:hidden">
          <path d="M120-240v-80h720v80H120Zm0-200v-80h720v80H120Zm0-200v-80h720v80H120Z"/>
        </svg>
      `;
    });
  });
</script>
